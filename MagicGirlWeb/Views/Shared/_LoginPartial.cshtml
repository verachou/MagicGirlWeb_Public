@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="dropdown dib">
  @if (SignInManager.IsSignedIn(User))
  {
    @* <div class="header-icon" data-toggle="dropdown">
      <span class="user-avatar">@User.Identity.Name
      <i class="ti-angle-down f-s-10"></i>
      </span>
      <div class="drop-down dropdown-profile dropdown-menu dropdown-menu-right">
      <div class="dropdown-content-body">
      <ul>
      <li>
      <a href="text.html">
      <i class="ti-power-off"></i>
      <span>Logout</span>
      </a>
      </li>
      </ul>
      </div>
      </div>
      </div> *@
    <span class="user-avatar">@User.Identity.Name
      <i class="ti-angle-down f-s-10"></i>
    </span>
    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
    asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
      <div class="input-group-btn">
        <button class="btn btn-light" type="submit">
          <i class="ti-power-off"></i>
          <span>Logout</span>
        </button>
      </div>
    </form>
  }
  else
  {
    <span class="user-avatar">
      @* <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
      <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="ExternalLogin" name="provider"
      value="Google">Login</a> *@
      <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
        <button type="submit" class="btn btn-default" name="provider" value="Google" title="Login">Google Login</button>
      </form>
    </span>
  }
</div>